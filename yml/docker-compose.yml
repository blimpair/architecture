version: '3'

services:

  # BUILD PHP 7
  php7: 
    image: php7_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: 
      context: ../images/php/7.0
      args:
        PHP_MODS: $PHP_MODS
    restart: always
    tty: true
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    env_file:
      - ../images/php/php.env
    networks:
      - tier_3


  # BUILD PHP 5.6
  legacy: 
    image: php5_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: 
      context: ../images/php/5.6
      args:
        PHP_MODS: $PHP_MODS
    restart: always
    tty: true
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    env_file:
      - ../images/php/php.env
    networks:
      - tier_3

  # BUILD PHP 7
  phpa: 
    image: phpa_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: 
      context: ../images/php/alpine
      args:
        PHP_MODS: $PHP_MODS
    restart: always
    tty: true
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    env_file:
      - ../images/php/php.env
    networks:
      - tier_3

  # BUILD HHVM
  hhvm: 
    image: hhvm_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: ./images/hhvm
    restart: always
    tty: true
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    env_file:
      - ../images/php/php.env
    networks:
      - tier_3

  # MYSQL 
  mysql:
    image: db_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: ../images/mysql
    volumes:
      - mysql_:/var/lib/mysql
    restart: always
    tty: true
    expose: 
      - "3306"
    env_file:
      - ../images/mysql/db.env
    networks:
      - tier_3
  
  # REDIS
  redis:
    image: redis_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: ../images/redis
    volumes:
      - redis_:/data
    expose: 
      - "6379"
    restart: always
    tty: true
    networks:
      - tier_3

  # NODE
  node:
    image: node_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: ../images/node
    expose: 
      - "3000"
    env_file:
      - ../images/node/node.env
    volumes: 
      - node_:/app
    restart: always
    tty: true
    networks:
      - tier_3
      - tier_1
  
  # mongodb 
  mongodb:
    image: mongo:latest
    restart: always
    tty: true
    volumes:
      - mongo_:/data/db
    expose: 
      - "27017"
    networks:
      - tier_3

  # CASSANDRA
  cassandra: 
    image: cassandra:latest
    restart: always
    tty: true
    expose: 
      - "7000"
    volumes: 
      - cassandra_:/var/lib/cassandra
    networks:
      - tier_3

  # INFLUX DB
  influxdb: 
    image: influxdb:alpine
    restart: always
    tty: true
    expose: 
      - "8086"
      - "8083"
    volumes: 
      - influxdb_:/var/lib/influxdb
    networks:
      - tier_3

  # nginx
  nginx:
    image: nginx_$PROJECT_NAME.$GIT_BRANCH:$VERSION
    build: ../images/nginx
    restart: always
    tty: true
    env_file: 
      - ../images/nginx/proxy.env
    volumes:
      - backend_:/www
    expose: 
      - "80"
      - "443"
    networks:
      - tier_3
      - tier_1

volumes:
  node_:
  mongo_:
  redis_:
  mysql_:
  cassandra_:
  influxdb_:
  backend_:

networks:
  tier_2:
    # driver: bridge
    # ipam:
    #   config:
    #     - subnet: 100.64.0.0/10
    #       gateway: 100.64.0.1
          
  tier_3:
    # driver: bridge
    # ipam:
    #   config:
    #     - subnet: 100.65.0.0/10
    #       gateway: 100.65.0.1
    #Â internal: true

  tier_0:
    external:
      name: network_tier_0
  tier_1:
    external:
      name: network_tier_1