version: '3'

services:

  # BUILD PHP 7
  php7: 
    build: ./images/php/7.0
    restart: always
    tty: true
    depends_on:
      - redis
      - db
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    links:
      - db:mysql
      - redis
    environment:
      TZ: "Europe/Rome"
      DEVELOPMENT: "true"
      MYSQL_ROOT_PASSWORD: "root_password"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_DATABASE: "test"
      SSH_USERNAME: ""
      SSH_PASSWORD: ""
      PROJECT_NAME: "test"
    networks:
      - ext
      - int

  # BUILD HHVM
  hhvm: 
    build: ./images/hhvm
    restart: always
    tty: true
    depends_on:
      - redis
      - db
    expose: 
      - "9000"
    volumes:
      - backend_:/www
    links:
      - db:mysql
      - redis
    environment:
      TZ: "Europe/Rome"
      DEVELOPMENT: "true"
      MYSQL_ROOT_PASSWORD: "root_password"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_DATABASE: "test"
    networks:
      - ext
      - int

  # BUILD PHP 5.6
  legacy: 
   build: ./images/php/5.6
   restart: always
   tty: true
   depends_on:
     - redis
   expose: 
     - "9000"
   volumes: 
     - ./data/www:/www
     - ./conf/php-5.6/php.ini:/etc/php/5.6/fpm/php.ini
     - ./logs/php/php5.6-fpm.log:/var/log/php5.6-fpm.log
   links:
     - db:mysql
     - redis
   networks:
     - int
     - ext
  
  # BUILD NODEJS 
  # use pm2 optionally
  node: 
   build: ./images/node
   restart: always
   tty: true
   expose: 
     - "27017"
   volumes: 
     - ./data/node:/app
     #- ./logs/php/php7.0-fpm.log:/var/log/php7.0-fpm.log
   links:
     - mongo
   depends_on:
     - mongo
   environment:
     PORT: "3000"
   networks:
     - int
     - ext # giving it external access for eventual API calls to third parties

  # MYSQL 
  db:
    build: ./images/mysql
    volumes:
      - mysql_:/var/lib/mysql
      - mysql__:/var/log/mysql
    restart: always
    tty: true
    expose: 
      - "3306"
    ports:
      - "8836:3306"
    environment:
      TZ: "Europe/Rome"
      MYSQL_ROOT_PASSWORD: "root_password"
      MYSQL_USER: "admin"
      MYSQL_PASSWORD: "admin"
      MYSQL_DATABASE: "test"
    networks:
      - int
  
  # mongodb 
  mongo:
    image: mongo:latest
    restart: always
    tty: true
    volumes:
      - mongo_:/data/db
    expose: 
      - "27017"
    networks:
      - int
  
  # REDIS
  redis:
    build: ./images/redis
    volumes:
      - redis_:/data
    expose: 
      - "6379"
    restart: always
    tty: true
    networks:
      - int

  # nginx
  proxy:
    build: ./images/nginx
    restart: always
    tty: true
    environment: 
      TZ: "Europe/Rome"
      WORKDIR: "/www"
      SSLOPTS: "-w /www -d localhost -d 127.0.0.1"
      ENVIRONMENT: "DEVELOPMENT"
      DOMAIN: "localhost"
    volumes:
      - backend_:/www
      - nginx__:/var/log/nginx
    depends_on:
      - php
      - hhvm
    links:
      - db:mysql
      - php:php7
      - hhvm
    expose: 
      - "80"
      - "443"
    ports: 
      - "8880:80"
      - "8443:443"
    networks:
      - ext
      - int

  # CASSANDRA
   cassandra: 
     image: cassandra:latest
     expose: 
      - "7000" # If it is a local development system leave this. Remove for production
     volumes: 
      - ./data/cassandra:/var/lib/cassandra
     restart: always
     networks:
       - int
  
  # BUILD NODEJS 
  # use pm2 optionally
  node: 
    build: ./images/node
    restart: always
    tty: true
    expose: 
      - "27017"
    volumes:
      - frontend_:/app
    depends_on:
      - mongo
    environment:
      PORT: "3000"
    networks:
      - ext # giving it external access for eventual API calls to third parties
      - int
  
  # INFLUX DB
   influxdb: 
     image: influxdb:alpine
     expose: 
       - "8086" # If it is a local development system leave this. Remove for production
       - "8083" # If it is a local development system leave this. Remove for production
     volumes: 
       - ./data/influxdb:/var/lib/influxdb
     restart: always
     networks:
       - int
  
  sshd:
    build: ./images/ssh
    restart: always
    tty: true
    environment:
      SSH_USERNAME: "root"
      SSH_PASSWORD: "root"
    volumes:
      - mongo_:/data/mongo
      - redis_:/data/redis
      - mysql_:/data/mysql
      - backend_:/data/www
      - frontend_:/data/app
      - mysql__:/logs/mysql
      - nginx__:/logs/nginx
    ports:
      - "2222:2222"
    expose: 
      - "2222"
    networks:
      - int
      - ext


volumes: # 1 underscore, data voluem. 2 underscore, logs volume
  mongo_: 
  redis_:
  mysql_:
  backend_:
  frontend_:
  nginx__:
  mysql__:
    
networks: 
  int:
    internal: true
  ext: