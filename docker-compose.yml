version: '2.1'

services:
  # BUILD PHP 7
  php: 
   build: ./images/php/7.0
   restart: always
   tty: true
   depends_on:
     - redis
     - db
   expose: 
     - "9000"
   volumes_from:
     - data
     - logs
     - conf
   links:
     - db:mysql
     - redis
   networks:
     - int
     - ext
   # healthcheck:
   #  test: ["CMD", "curl", "-f", "http://localhost"]
   #  interval: 1m30s
   #  timeout: 10s
   #  retries: 3
  
  # BUILD NODEJS 
  # use pm2 optionally
  node: 
   build: ./images/node
   restart: always
   tty: true
   expose: 
     - "27017"
   volumes_from:
     - data
   depends_on:
     - mongo
   environment:
     PORT: "3000"
   networks:
     - int
     - ext # giving it external access for eventual API calls to third parties

  # MYSQL 
  db:
   image: mysql:5.7
   volumes_from:
     - data
     - logs
     - conf
   restart: always
   expose: 
     - "3306"
   environment:
     MYSQL_ROOT_PASSWORD: "root_password"
     MYSQL_USER: "admin"
     MYSQL_PASSWORD: "admin"
     MYSQL_DATABASE: "test"
   networks:
    - int
  
  # mongodb 
  mongo:
   image: mongo:latest
   restart: always
   volumes_from:
     - data
     - logs
     - conf
   expose: 
     - "27017"
   networks:
     - int
  
  # REDIS
  redis:
   image: redis
   volumes_from:
     - data
     - logs
     - conf
   expose: 
     - "6379"
   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
   restart: always
   networks:
     - int

  # nginx
  proxy:
    build: ./images/nginx
    restart: always
    tty: true
    environment: 
     WORKDIR: "/www"
     SSLOPTS: "-w /www/7.0 -d progress44.com -d dev7.progress44.com"
     ENVIRONMENT: "DEVELOPMENT"
     DOMAIN: "localhost"
    volumes_from:
     - data
     - logs
     - conf
    depends_on:
     - php
     - node
    links:
     - db:mysql
     - php:php7
     - node
    expose: 
     - "80"
     - "443"
    ports: 
     - "8880:80"
     - "8443:443"
    networks:
     - int
     - ext

  data:
    extends:
      file: volumes.yml
      service: data
  logs:
    extends:
      file: volumes.yml
      service: logs
  conf:
    extends:
      file: volumes.yml
      service: conf

volumes:
  data:
  logs:
  conf:

networks: 
  int:
    internal: true
  ext: