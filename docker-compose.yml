version: '2'

services:
  # BUILD PHP 7
  php: 
   build: ./images/php/7.0
   restart: always
   tty: true
   depends_on:
     - redis
   expose: 
     - "9000"
   volumes: 
     - ./data/www:/www
     - ./conf/php-7.0/php.ini:/etc/php/7.0/fpm/php.ini
     - ./logs/php/php7.0-fpm.log:/var/log/php7.0-fpm.log
   links:
     - db:mysql
     - redis
   networks:
     - int
     - ext

  # BUILD PHP 5.6
  legacy: 
   build: ./images/php/5.6
   restart: always
   tty: true
   depends_on:
     - redis
   expose: 
     - "9000"
   volumes: 
     - ./data/www:/www
     - ./conf/php-5.6/php.ini:/etc/php/5.6/fpm/php.ini
     - ./logs/php/php5.6-fpm.log:/var/log/php5.6-fpm.log
   links:
     - db:mysql
     - redis
   networks:
     - int
     - ext
  
  # BUILD NODEJS 
  # use pm2 optionally
  node: 
   build: ./images/node
   restart: always
   tty: true
   expose: 
     - "27017"
   volumes: 
     - ./data/node:/app
     #- ./logs/php/php7.0-fpm.log:/var/log/php7.0-fpm.log
   links:
     - mongo
   depends_on:
     - mongo
   environment:
     PORT: "3000"
   networks:
     - int
     - ext # giving it external access for eventual API calls to third parties

  # MYSQL 
  db:
   image: mariadb:latest
   volumes:
     - ./data/mysql:/var/lib/mysql
     - ./conf/mysql:/etc/mysql:ro
     - ./logs/mysql:/var/log/mysql
   restart: always
   expose: 
     - "3306"
   environment:
     MYSQL_ROOT_PASSWORD: "root_password"
     MYSQL_USER: "admin"
     MYSQL_PASSWORD: "admin"
     MYSQL_DATABASE: "test"
   networks:
    - int
  
  # mongodb 
  mongo:
   image: mongo:latest
   restart: always
   volumes: 
     - .data/mongo:/data/db
     # - .conf/mongo:/data/configdb
   expose: 
     - "27017"
   networks:
    - int
  
  # REDIS
  redis:
   image: redis
   expose: 
    - "6379"
   volumes: 
    - ./data/redis:/data
    - ./conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
   command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
   restart: always
   networks:
     - int
  
  # mongo-express
  # not necessary for production envs.
  mongoexpress:
   image: mongo-express:latest
   restart: always
   depends_on: 
     - mongo
   expose: 
     - "8081"
   ports: 
     - "8081:8081"
   links:
     - mongo
   networks:
     - int

  # nginx
  proxy:
    build: ./images/nginx
    restart: always
    tty: true
    environment: 
     WORKDIR: "/www"
     SSLOPTS: "-w /www/7.0 -d progress44.com -d dev7.progress44.com"
     ENVIRONMENT: "DEVELOPMENT"
     DOMAIN: "localhost"
    # volumes_from:
    #   - data
    depends_on:
     - db
     - php
     - node
    links:
     - db:mysql
     - php:php7
     - mongo
    volumes: 
     - ./conf/nginx:/etc/nginx:ro
     - ./data/www:/www #making it rw so letsencrypt can set up the challenge
     - ./logs/nginx:/var/log/nginx
    expose: 
     - "80"
     - "443"
    ports: 
     - "8880:80"
     - "8443:443"
    networks:
     - int
     - ext

  #####
  # data 
  data:
   image: busybox:latest
   restart: always
   volumes: 
     - ./data/www:/www
   networks:
    - int
  ######

networks: 
  int:
    internal: true
  ext:

volumes: 
  databases: