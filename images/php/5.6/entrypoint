#!/bin/sh
set -e

## This can't be down with user www-data and is obsolete regardless 
## For production, app must be copied to /root/init
# if [ ! -z "$(ls -A /root/. | grep init)" ]; then
# 	rm -rf $WORKDIR/.
# 	mv -r /root/init/* $WORKDIR/
# 	rm -rf /root/init
# fi

# first arg is `-f` or `--some-option`
if [ "${1#-}" != "$1" ]; then
	set -- php "$@"
fi

##############
# Init project if not found
if [ -z "$(ls -A $WORKDIR | grep $PROJECT_NAME)" ]; then
	cd $WORKDIR

	if [ ! -z $AERIAWORK_ENABLED -a $AERIAWORK_ENABLED != "''" -a $DEVELOPMENT -eq 1 ]; then 

		## Creating aeriawork project
		composer create-project --keep-vcs aeria/work $PROJECT_NAME

		## Copying server configuration from server folder
		if [ ! -z "$(ls -A $WORKDIR/$PROJECT_NAME | grep server)" ]
		then
			ln -sf $WORKDIR/$PROJECT_NAME/server/ $WORKDIR/nginx/$PROJECT_NAME
		fi

		## Copying server configuration from nginx folder
		if [ ! -z "$(ls -A $WORKDIR/$PROJECT_NAME | grep nginx)" ]
		then
			ln -sf $WORKDIR/$PROJECT_NAME/nginx/ $WORKDIR/nginx/$PROJECT_NAME
		fi
	else
		## If aeriawork shouldn't be enabled, just create project dir
		mkdir -p $WORKDIR/$PROJECT_NAME
	fi
fi

##############
## COPY env variables to file

FILE="$WORKDIR/$PROJECT_NAME/.env"
TMP=.tmp

if [ -f $FILE ]; then
	rm -rf $FILE
fi

touch $FILE
env >> $TMP

while read e; do
	case $e in
		*\ * )
			echo "WARN Whitespaces in environment variables will be eliminated. Avoid them. ($e)"
			# echo "${e%=*}='${e##*=}'" >> $FILE
			
			;;
		*)
			echo "OK $e"
			echo $e >> $FILE

			;;
	esac
done <$TMP
rm -rf $TMP

##############

docker-php-entrypoint $@